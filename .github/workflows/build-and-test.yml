name: Build and Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        # Linux (x86_64, GNU)
        - runner: ubuntu-latest
          target: x86_64-unknown-linux-gnu
        # Linux (x86_64, musl)
        - runner: ubuntu-latest
          target: x86_64-unknown-linux-musl
        # Windows (x86_64, GNU)
        - runner: windows-latest
          target: x86_64-pc-windows-gnu
        # Windows (x86_64, MSVC)
        - runner: windows-latest
          target: x86_64-pc-windows-msvc
        # Windows (ARM64, MSVC)
        - runner: windows-latest
          target: aarch64-pc-windows-msvc
        # macOS (x86_64)
        - runner: macos-latest
          target: x86_64-apple-darwin
        # macOS (Apple silicon)
        - runner: macos-latest
          target: aarch64-apple-darwin
    runs-on: ${{ matrix.runner }}

    steps:
    - uses: actions/checkout@v3
    - name: Setup toolchain
      run: |
        rustup target add '${{ matrix.target }}'
    # https://github.com/briansmith/ring/issues/563#issuecomment-676861003
    - name: Setup musl-tools
      run: |
        sudo apt-get -y install musl-tools
      if: ${{ matrix.target == 'x86_64-unknown-linux-musl' }}
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.2.1
      with:
        prefix-key: ${{ matrix.target }}-${{ env.CI_RUST_CACHE_VERSION }}-${{ hashFiles('**/Cargo.lock') }}
      env:
        RUST_CACHE_VERSION: cache-v1
    - name: Build (${{ matrix.target }})
      run: cargo build --verbose --target=${{ matrix.target }}
    - name: Run tests
      run: cargo test --verbose --target=${{ matrix.target }}
