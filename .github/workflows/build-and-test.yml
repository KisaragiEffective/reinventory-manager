name: Build and Test

on:
  push:
    branches: [ "master" ]
    paths:
      - Cargo.toml
      - Cargo.lock
      - src/**
      - .github/workflows/build-and-test.yml
  pull_request:
    branches: [ "master" ]
    paths:
      - Cargo.toml
      - Cargo.lock
      - src/**
      - .github/workflows/build-and-test.yml

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        # Linux (x86_64, GNU) - required
        - runner: ubuntu-latest
          target: x86_64-unknown-linux-gnu
          https:  https_rustls
        # Linux (x86_64, musl) - required
        - runner: ubuntu-latest
          target: x86_64-unknown-linux-musl
          https:  https_rustls
        # Windows (x86_64, GNU) - required
        # Temporary disabled
        # - runner: windows-latest
        #  target: x86_64-pc-windows-gnu
        #  https:  https_rustls
        # Windows (x86_64, MSVC)
        - runner: windows-latest
          target: x86_64-pc-windows-msvc
          https:  https_rustls
        # Windows (ARM64, MSVC)
        - runner: windows-latest
          target: aarch64-pc-windows-msvc
          https:  https_rustls
        # macOS (x86_64) - required
        - runner: macos-latest
          target: x86_64-apple-darwin
          https:  https_rustls
        # macOS (Apple silicon)
        - runner: macos-latest
          target: aarch64-apple-darwin
          https:  https_os_native
    runs-on: ${{ matrix.runner }}

    steps:
    - uses: actions/checkout@v4
    - name: Setup toolchain
      run: |
        rustup target add '${{ matrix.target }}'
    # https://github.com/briansmith/ring/issues/563#issuecomment-676861003
    - name: Setup musl-tools
      run: |
        sudo apt-get -y install musl-tools
      if: ${{ matrix.target == 'x86_64-unknown-linux-musl' }}
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.7.3
      with:
        prefix-key: rust-build-cache-${{ env.RUST_CACHE_VERSION }}
      env:
        RUST_CACHE_VERSION: v1
    - name: Build (${{ matrix.target }})
      run: cargo build -F '${{ matrix.https }}' --verbose --target=${{ matrix.target }}
    - name: Run tests
      run: cargo test -F '${{ matrix.https }}' --verbose --target=${{ matrix.target }}
      # GitHub runner CPUs are native x86_64, skip test for now
      if: ${{ matrix.target != 'aarch64-pc-windows-msvc' && matrix.target != 'aarch64-apple-darwin' }}
